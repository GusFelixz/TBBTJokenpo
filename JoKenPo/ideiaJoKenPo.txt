	class JokenpoApp : Application() {

    private var victories = 0
    private var defeats = 0
    private var ties = 0

    private val choices = listOf("Pedra", "Papel", "Tesoura", "Lagarto", "Spock")

    override fun start(primaryStage: Stage) {
        val vbox = VBox(10.0)
        val resultLabel = Label("Vitórias: $victories | Derrotas: $defeats | Empates: $ties")
        val buttons = choices.map { choice ->
            Button(choice).apply {
                setOnAction {
                    playGame(choice)
                    resultLabel.text = "Vitórias: $victories | Derrotas: $defeats | Empates: $ties"
                }
            }
        }

        vbox.children.addAll(resultLabel, *buttons.toTypedArray())

        val scene = Scene(vbox, 300.0, 200.0)
        primaryStage.title = "Jokenpô"
        primaryStage.scene = scene
        primaryStage.show()
    }

    private fun playGame(playerChoice: String) {
        val computerChoice = choices.random()
        val result = getGameResult(playerChoice, computerChoice)
        showPopup(playerChoice, computerChoice, result)
        when (result) {
            "Vitória" -> victories++
            "Derrota" -> defeats++
            "Empate" -> ties++
        }
    }

    private fun getGameResult(playerChoice: String, computerChoice: String): String {
        return when {
            playerChoice == computerChoice -> "Empate"
            (playerChoice == "Pedra" && (computerChoice == "Tesoura" || computerChoice == "Lagarto")) ||
            (playerChoice == "Papel" && (computerChoice == "Pedra" || computerChoice == "Spock")) ||
            (playerChoice == "Tesoura" && (computerChoice == "Papel" || computerChoice == "Lagarto")) ||
            (playerChoice == "Lagarto" && (computerChoice == "Papel" || computerChoice == "Spock")) ||
            (playerChoice == "Spock" && (computerChoice == "Pedra" || computerChoice == "Tesoura")) -> "Vitória"
            else -> "Derrota"
        }
    }

    private fun showPopup(playerChoice: String, computerChoice: String, result: String) {
        val popup = Popup()
        val popupContent = VBox(10.0).apply {
            children.addAll(
                Label("Sua escolha: $playerChoice"),
                Label("Escolha do computador: $computerChoice"),
                Label("Resultado: $result")
            )
        }
        popup.content.add(popupContent)
        popup.show(stage)
    }

    companion object {
        @JvmStatic
        fun main(args: Array<String>) {
            launch(JokenpoApp::class.java)
        }
    }
}